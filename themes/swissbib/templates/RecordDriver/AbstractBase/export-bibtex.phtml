<?
// TODO: fold this logic into record driver methods at some point:
// copied template from core
$marc = $this->driver->tryMethod('getMarcRecord');
if (is_object($marc)) {
    $marcPhdField = $marc->getField('502');
    $marcProceedingsField = $marc->getField('711');
} else {
    $marcPhdField = $marcProceedingsField = false;
}
$journalTitle = $this->driver->tryMethod('getContainerTitle');
$formats = $this->driver->tryMethod('getFormats');
$journalMatches = array_filter($formats, function($var) { return preg_match("/Zeitschrift/", $var); });
$isJournal = !empty($journalMatches);

if ($marcProceedingsField) {
    $format = 'proceedings';
} else if ($marcPhdField) {
    $format = 'phdthesis';
} else if (!empty($journalTitle) || (is_array($formats) && (in_array('Article', $formats) || in_array('Artikel', $formats)))) {
    $format = 'article';
} else if (is_array($formats) && in_array('Journal', $formats) || $isJournal) {
    $format = 'misc';
} else {
    $format = 'book';
}

// Open format tag:
echo '@' . $format . "{\n";

// Citation key:
echo $this->driver->getResourceSource() . '-' . $this->driver->getUniqueId() . "\n";

$title = rtrim($this->driver->getTitle(), " /");
echo "title = $title,\n";

if (!empty($journalTitle)) {
    echo "journal = $journalTitle,\n";
    $volume = $this->driver->tryMethod('getContainerVolume');
    if (!empty($volume)) {
        echo "volume = $volume,\n";
    }
    $number = $this->driver->tryMethod('getContainerIssue');
    if (!empty($number)) {
        echo "number = $number,\n";
    }
}

$series = $this->driver->tryMethod('getSeries');
if (is_array($series)) {
    foreach ($series as $current) {
        echo 'series = ' . (is_array($current) ? $current['name'] : $current) . ",\n";
    }
}

$author = $this->driver->tryMethod('getPrimaryAuthor');
if (!empty($author)) {
    echo "author = $author,\n";
}

$secondaryAuthors = $this->driver->tryMethod('getSecondaryAuthors');
if (is_array($secondaryAuthors)) {
    foreach ($secondaryAuthors as $current) {
        echo "editor = $current,\n";
    }
}

$pubPlaces = $this->driver->tryMethod('getPlacesOfPublication');
$pubDates = $this->driver->tryMethod('getPublicationDates');
$pubNames = $this->driver->tryMethod('getPublishers');
if (is_array($pubPlaces) && is_array($pubDates) && is_array($pubNames)) {
    $total = min(count($pubPlaces), count($pubDates), count($pubNames));
    // if we have pub dates but no other details, we still want to export the year:
    if ($total == 0 && count($pubDates) > 0) {
        $total = 1;
    }
    for ($i = 0; $i < $total; $i++) {
        if (isset($pubPlaces[$i])) {
            echo "address = " . rtrim(str_replace(array('[', ']'), '', $pubPlaces[$i]), ': '). ",\n";
        }
        if (isset($pubNames[$i])) {
            echo "publisher = " . rtrim($pubNames[$i], ", ") . ",\n";
        }
    }

    if ($this->driver->getSourceIdentifier()=='Summon') {
        $date = $this->publicationDateSummon($pubDates);
    } else {
        $date = $this->publicationDateMarc($pubDates);
    }

    if (!empty($date)) {
        echo "year = $date,\n";
    }
}

$edition = $this->driver->tryMethod('getEdition');
if (!empty($edition)) {
    echo "edition = $edition,\n";
}

if ($marcPhdField && $subfield = $marcPhdField->getSubfield('a')) {
    echo 'school = ' . $subfield->getData() . ",\n";
}

// Try to find a page count in the physical description:
$physical = $this->driver->tryMethod('getPhysicalDescriptions');
if (is_array($physical)) {
    foreach ($physical as $current) {
        if ( preg_match('/([0-9]+)\s*S/', $current, $matches) || preg_match('/([0-9]+)\s*p/', $current, $matches)) {
            echo "pages = {$matches[1]},\n";
            break;
        }
    }
}

$notes = $this->driver->tryMethod('getGeneralNotes');
if (is_array($notes)) {
    foreach ($notes as $note) {
        echo "note = $note,\n";
    }
}

foreach ($this->record($this->driver)->getUrlList() as $url) {
    echo "url = $url,\n";
}

echo "crossref = " . $this->serverUrl($this->recordLink()->getUrl($this->driver)) . "\n";

$isbns = $driver->tryMethod('getISNBs');
if (!empty($isbns)) {
    echo 'isbn= ' . $isbns[0] . "\n";
}

$issns =$driver->tryMethod('getISSNs');
if (!empty($isbns)) {
    echo 'issn= ' . $issns[0] . "\n";
}
// Record separator:
echo "}\n\n";
?>